name: Build OTA Server Image

on:
  push:
    branches: [ "main" ]
    paths:
      - 'ota_server/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'ota_server/**'

env:
  IMAGE_NAME: klimdos/ota-server

jobs:
  build-docker:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Generate semantic version from Git
      id: version-generator
      run: |
        set -e  # Ensure the script exits if there's an error
        ARTEFACT_VERSION=$(git describe --long --always --tags | sed -r "s/-(([^-]*-){1}[^-]*)$/.\\1/")
        echo "ARTEFACT_VERSION=${ARTEFACT_VERSION}" >> $GITHUB_ENV

    - name: Print ARTEFACT_VERSION
      run: echo "ARTEFACT_VERSION is ${{ env.ARTEFACT_VERSION }}"

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image with caching
      uses: docker/build-push-action@v6
      with:
        context: ./ota_server
        push: true
        tags: |
          ${{ env.IMAGE_NAME }}:${{ env.ARTEFACT_VERSION }}
          ${{ env.IMAGE_NAME }}:latest
        cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:latest
        cache-to: type=inline
        build-args: |
          Build=${{ env.ARTEFACT_VERSION }}

    - name: Cleanup Docker environment
      run: docker builder prune --force

    - name: Update Kubernetes deployment
      run: |
        echo "ðŸš€ New OTA server image built and pushed:"
        echo "Image: ${{ env.IMAGE_NAME }}:${{ env.ARTEFACT_VERSION }}"
        echo "Latest: ${{ env.IMAGE_NAME }}:latest"
        echo ""
        echo "To update Kubernetes deployment, run:"
        echo "kubectl set image deployment/ota-server ota-server=${{ env.IMAGE_NAME }}:${{ env.ARTEFACT_VERSION }} -n ota-ns"
